#! /usr/bin/env bash

set -e

TARGET_BUILD_ARGS_C=(
    "--config \${CMAKE_CURRENT_LIST_DIR}/bin/${TARGET_TUPLE}.cfg"
    "--sysroot=\${CMAKE_CURRENT_LIST_DIR}/${TARGET_TUPLE}"
    "-B \${CMAKE_CURRENT_LIST_DIR}/${TARGET_TUPLE}/usr/lib/${TARGET_TUPLE}/${V_GCC}"
)
TARGET_BUILD_ARGS_CXX=(
    "${TARGET_BUILD_ARGS_C[@]}"
    "-I \${CMAKE_CURRENT_LIST_DIR}/${TARGET_TUPLE}/usr/include/c++/v1"
)
TARGET_LINK_ARGS=(
    "-L \${CMAKE_CURRENT_LIST_DIR}/${TARGET_TUPLE}/usr/lib/${TARGET_TUPLE}/${V_GCC}"
)

TARGET_BUILD_ARGS_C_STR="${TARGET_BUILD_ARGS_C[@]}"
TARGET_BUILD_ARGS_CXX_STR="${TARGET_BUILD_ARGS_CXX[@]}"
TARGET_LINK_ARGS_STR="${TARGET_LINK_ARGS[@]}"

TOOLCHAIN_CMAKE_OUT=cmake-toolchain.cmake

cat << EOF > ${TOOLCHAIN_CMAKE_OUT}
set(CMAKE_SYSTEM_NAME Linux)
set(CMAKE_SYSTEM_PROCESSOR arm)
set(CMAKE_SYSTEM_VERSION 1)

set(CMAKE_C_COMPILER \${CMAKE_CURRENT_LIST_DIR}/bin/clang)
set(CMAKE_CXX_COMPILER \${CMAKE_CURRENT_LIST_DIR}/bin/clang++)
set(CMAKE_AR \${CMAKE_CURRENT_LIST_DIR}/bin/llvm-ar)

set(CMAKE_C_COMPILER_TARGET ${TARGET_TUPLE})
set(CMAKE_CXX_COMPILER_TARGET ${TARGET_TUPLE})

set(CMAKE_FIND_ROOT_PATH "\${CMAKE_CURRENT_LIST_DIR}/${TARGET_TUPLE}/")

set(CMAKE_C_FLAGS "$TARGET_BUILD_ARGS_C_STR")
set(CMAKE_CXX_FLAGS "$TARGET_BUILD_ARGS_CXX_STR")
set(DCMAKE_EXE_LINKER_FLAGS "$TARGET_LINK_ARGS_STR")
set(DCMAKE_SHARED_LINKER_FLAGS "$TARGET_LINK_ARGS_STR")

# Use host tools
set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)

# Only ever build/link to sysroot
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)

EOF
