#! /usr/bin/env bash
source ${ROOT_DIR}/consts.env
source ${ROOT_DIR}/targets/${TOOLCHAIN_NAME}/version.env

WPI_PATH="${ROOT_DIR}/build/${TOOLCHAIN_NAME}/"

CFLAGS="$GCC_CFLAGS"
CXXFLAGS="$GCC_CXXFLAGS"
export CFLAGS CXXFLAGS

set -e

CFLAGS_FOR_TARGET="-g -O2 -Wformat -Wformat-security"
CXXFLAGS_FOR_TARGET="-g -O2 -Wformat -Wformat-security"
FFLAGS_FOR_TARGET="-g -O2"
LDFLAGS_FOR_TARGET="-Wl,-Bsymbolic-functions -Wl,-z,relro"
export {C,CXX,F,LD}FLAGS_FOR_TARGET

rm -rf "${BUILD_DIR}/gcc-${V_GCC}"
echo "Extracting GCC..."
tar xf ${DOWNLOAD_DIR}/gcc-${V_GCC}.tar.gz

pushd "${BUILD_DIR}/gcc-${V_GCC}/"
./contrib/download_prerequisites
if ls -l "${PATCH_DIR}/" | grep -q "gcc-${V_GCC//.*/}"; then
    for file in "${PATCH_DIR}"/gcc-${V_GCC//.*/}_*.patch; do
        patch -p1 -N -s <"$file"
    done
fi
popd

BUILD_TUPLE="$(gcc -dumpmachine)" # Builder
HOST_TUPLE="${WPIHOSTTARGET}"

# No Canadian Build on MacOS
if [ "${WPITARGET}" != Mac ]; then
    # If tuple mismatch then confirm if there is first pass
    if [ "$BUILD_TUPLE" != "$HOST_TUPLE" ]; then
        command -v "${WPIHOSTTARGET}-gcc" || exit
        command -v "${TARGET_PREFIX}-gcc" || exit
        unset CC CXX CPP LD
    fi
fi

BUILD_INFO=(
    "--build=${BUILD_TUPLE}"
    "--host=${WPIHOSTTARGET}"
    "--target=${TARGET_PREFIX}"
    "--prefix=$WPIPREFIX"                # Host directory prefix
    "--program-prefix=${TARGET_PREFIX}-" # Host binary prefix
)
TARGET_INFO=(
    "--with-cpu=${TARGET_CPU}"     # target -mtune
    "--with-fpu=${TARGET_FPU}"     # target -mfpu
    "--with-arch=${TARGET_ARCH}"   # target -march
    "--with-float=${TARGET_FLOAT}" # target -mfloat-abi
    "--with-specs=${TARGET_SPECS}" # default target flags
)
FEATURE_INFO=(
    "--enable-threads=posix"           # Target threading library
    "--enable-languages=c,c++,fortran" # More languages require extra packages
    "--enable-lto"                     # Optimize host binaries
    "--disable-nls"
    "--with-pkgversion=GCC for FRC ${V_YEAR}"
    "--with-cloog"
    "--enable-shared"
)
SYSROOT_INFO=(
    "--with-sysroot=$WPIPREFIX/$TARGET_PREFIX"
    "--with-build-sysroot=/usr/local/$TARGET_PREFIX"
    "--libdir=$WPIPREFIX/$TARGET_PREFIX/usr/lib"
    "--with-gxx-include-dir=$WPIPREFIX/$TARGET_PREFIX/usr/include/c++/${V_GCC}"
)

rm -rf ${BUILD_DIR}/gcc-{build,install}
mkdir -p ${BUILD_DIR}/gcc-{build,install}
pushd ${BUILD_DIR}/gcc-build
"${BUILD_DIR}/gcc-${V_GCC}/configure" \
    "${BUILD_INFO[@]}" \
    "${TARGET_INFO[@]}" \
    "${FEATURE_INFO[@]}" \
    "${SYSROOT_INFO[@]}" \
    "${BACKPORT_INFO[@]}" \
    --enable-poison-system-directories \
    --disable-libmudflap \
    $([ "$WPITARGET" != "Windows" ] && echo --with-system-zlib) ||
    exit
if [ "$BACKPORT_LIBSTDCXX" != "true" ]; then
    make -j"$JOBS" all-gcc all-target-libgfortran || exit
    DESTDIR=${BUILD_DIR}/gcc-install make install-strip-gcc || exit
else
    make -j"$JOBS" || exit
    DESTDIR=${BUILD_DIR}/gcc-install make install
fi
popd
